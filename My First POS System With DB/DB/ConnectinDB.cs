using MySql.Data.MySqlClient;
using System;
using System.Data;
using System.Data.SqlClient;
using System.Deployment.Application;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Windows.Forms;

namespace My_First_POS_System_With_DB
{
    internal class ConnectionDB
    {
        public static string con = "Server=localhost;Port=3306;Database=pointofsale_db;User Id=root;Password='';";

        public static MySqlConnection GetConnection()
        {
            MySqlConnection connection = new MySqlConnection(con);
            try
            {
                connection.Open();
            }
            catch (MySqlException ex)
            {
                MessageBox.Show("MySql Connection Error!\n" + ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            return connection;
        }

        public bool Authentication(string UserName, string Password)
        {
            using (MySqlConnection connection = GetConnection())
            {
                string query = "SELECT * FROM tb_Login WHERE Username = @UserName AND Password = @Password ";

                using (MySqlCommand cmd = new MySqlCommand(query, connection))
                {
                    cmd.Parameters.AddWithValue("@UserName", UserName);
                    cmd.Parameters.AddWithValue("@Password", Password);

                    using (MySqlDataReader reader = cmd.ExecuteReader())
                    {
                        if (reader.HasRows)
                        {
                            // User authenticated successfully
                            return true;
                        }
                    }
                }
            }

            return false;
        }

        public static void RegisterUser(string firstName, string lastName, string gender, Image image, string middlename, string username, string password)
        {
            using (MySqlConnection connection = GetConnection())
            using (MySqlTransaction transaction = connection.BeginTransaction())
            {
                try
                {
                    // Insert into tb_login
                    string loginQuery = "INSERT INTO tb_login (Username, Password) VALUES (@Username, @Password)";

                    using (MySqlCommand cmd = new MySqlCommand(loginQuery, connection, transaction))
                    {
                        cmd.Parameters.AddWithValue("@Username", username);
                        cmd.Parameters.AddWithValue("@Password", password);

                        cmd.ExecuteNonQuery();

                        // retrieve the Login_ID generated by the database and same Id connection
                        int loginId = (int)cmd.LastInsertedId;

                        // Insert into tb_cashier with the corresponding Login_ID
                        string cashierQuery = "INSERT INTO tb_cashier (Login_ID, FirstName, LastName, Gender, PictureCashier, MiddleName) " +
                                              "VALUES (@Login_ID, @FirstName, @LastName, @Gender, @PictureCashier, @MiddleName)";

                        using (MySqlCommand cashierCmd = new MySqlCommand(cashierQuery, connection, transaction))
                        {
                            cashierCmd.Parameters.AddWithValue("@Login_ID", loginId);
                            cashierCmd.Parameters.AddWithValue("@FirstName", firstName);
                            cashierCmd.Parameters.AddWithValue("@LastName", lastName);
                            cashierCmd.Parameters.AddWithValue("@Gender", gender);
                            cashierCmd.Parameters.AddWithValue("@MiddleName", middlename);

                            if (image != null)
                            {
                                using (MemoryStream ms = new MemoryStream())
                                {
                                    image.Save(ms, ImageFormat.Jpeg);
                                    cashierCmd.Parameters.AddWithValue("@PictureCashier", ms.ToArray());
                                }
                            }
                            else
                            {
                                cashierCmd.Parameters.AddWithValue("@PictureCashier", DBNull.Value);
                            }

                            cashierCmd.ExecuteNonQuery();
                        }
                    }

                    transaction.Commit();
                    MessageBox.Show("Added Successfully", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
                catch (MySqlException ex)
                {
                    transaction.Rollback();
                    MessageBox.Show("Record not inserted\n" + ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }




        public static int GetCategoryId(string category)
        {
            using (MySqlConnection connection = GetConnection())
            {
                string categoryIdQuery = "SELECT Category_ID FROM tb_category WHERE CategoryProduct = @Category";

                using (MySqlCommand categoryIdCommand = new MySqlCommand(categoryIdQuery, connection))
                {
                    categoryIdCommand.Parameters.AddWithValue("@Category", category);

                    object categoryIdResult = categoryIdCommand.ExecuteScalar();
                    return categoryIdResult != null ? Convert.ToInt32(categoryIdResult) : -1;
                }
            }
        }

        public static void AddProduct(string itemName, decimal itemPrices, int itemStocks, Image image, string category)
        {
            try
            {
                int categoryId = GetCategoryId(category);

                if (categoryId == -1)
                {
                    MessageBox.Show("Category does not exist. Please add the category first.");
                    return;
                }

                using (MySqlConnection connection = GetConnection())
                {
                    string insertQuery = "INSERT INTO tb_item (Category_ID, ItemName, ItemPrice, ItemStock, ItemPicture) VALUES (@Category_ID, @ItemName, @ItemPrice, @ItemStock, @ItemPicture)";

                    using (MySqlCommand insertCommand = new MySqlCommand(insertQuery, connection))
                    {
                        insertCommand.Parameters.AddWithValue("@Category_ID", categoryId);
                        insertCommand.Parameters.AddWithValue("@ItemName", itemName);
                        insertCommand.Parameters.AddWithValue("@ItemPrice", itemPrices);
                        insertCommand.Parameters.AddWithValue("@ItemStock", itemStocks);

                        if (image != null)
                        {
                            using (MemoryStream ms = new MemoryStream())
                            {
                                image.Save(ms, System.Drawing.Imaging.ImageFormat.Png);
                                insertCommand.Parameters.AddWithValue("@ItemPicture", ms.ToArray());
                            }
                        }
                        else
                        {
                            insertCommand.Parameters.AddWithValue("@ItemPicture", DBNull.Value);
                        }

                        insertCommand.ExecuteNonQuery();
                    }

                    MessageBox.Show("Product added successfully.", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"An error occurred while adding the product: {ex.Message}", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }


        public static void DisplayAndSearch(string query, DataGridView dgv)
        {
            string sql = query;
            MySqlConnection connection = GetConnection();
            MySqlCommand cmd = new MySqlCommand(sql, connection);
            MySqlDataAdapter adp = new MySqlDataAdapter(cmd);
            DataTable tbl = new DataTable();
            adp.Fill(tbl);
            dgv.DataSource = tbl;
            connection.Close();
        }



        public static DataTable DisplayProduct(string query)
        {
            DataTable dt = new DataTable();

            // Your database connection logic
            MySqlConnection connection = GetConnection();
            {
                MySqlCommand command = new MySqlCommand(query, connection);
                MySqlDataAdapter adapter = new MySqlDataAdapter(command);

             
                adapter.Fill(dt);
                connection.Close();
            }

            return dt;
        }


    }
}



    

